<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <!-- main configuration, loaded via factory bean -->
  <bean id="jdbcStoreProperties" 
    class="org.geoserver.jdbcstore.internal.JDBCResourceStorePropertiesFactoryBean">
      <constructor-arg ref="dataDirectoryResourceStore"/>
  </bean>

  <!-- data source, also loaded and configured via factory bean -->
  <bean id="jdbcStoreDataSource" class="org.geoserver.jdbcloader.DataSourceFactoryBean">
    <constructor-arg ref="jdbcStoreProperties" />
  </bean>
  
  <!-- cache -->
  <bean id="resourceCache" class="org.geoserver.jdbcstore.cache.DataDirectoryResourceCache">  
  </bean>
  
  <!-- resource store -->
  <bean id="resourceStoreImpl" class="org.geoserver.jdbcstore.JDBCResourceStoreFactoryBean">
    <constructor-arg ref="dataDirectoryResourceStore" />
    <constructor-arg ref="jdbcStoreDataSource" />
    <constructor-arg ref="jdbcStoreProperties" />
    <property name="cache" ref="resourceCache" />
    <property name="resourceNotificationDispatcher" ref="resourceNotificationDispatcher"/>
    <!-- Use cluster-friendly, database backed distributed locks by default -->
    <property name="lockProvider" ref="jdbcStoreLockProvider"/>
  </bean>

  <!-- GeoServer LockProvider using the lock registry providing database backed distributed locks -->
  <bean id="jdbcStoreLockProvider" class="org.geoserver.jdbcstore.locks.LockRegistryAdapter">
    <constructor-arg ref="jdbcLockRegistry"/>
  </bean>
  
  <!-- spring-integration LockRegistry backed by the distributed locks repository -->
  <bean id="jdbcLockRegistry" class="org.springframework.integration.jdbc.lock.JdbcLockRegistry">
    <constructor-arg ref="jdbcLockRepository"/>
  </bean>
  
  <!-- Database backed distributed locking repository provided by spring-integration-jdbc -->
  <bean id="jdbcLockRepository" class="org.springframework.integration.jdbc.lock.DefaultLockRepository">
    <constructor-arg ref="jdbcStoreDataSource"/>
    <!-- override default table prefix "INT" by "RESOURCE_" (matching table definition RESOURCE_LOCK in init.XXX.sql -->
    <property name="prefix" value="RESOURCE_"/>
    <!-- time in ms to expire dead locks (10k is the default) -->
    <property name="timeToLive" value="10000"/>
  </bean>
</beans>
